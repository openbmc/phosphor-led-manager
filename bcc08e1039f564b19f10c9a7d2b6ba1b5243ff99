{
  "comments": [
    {
      "key": {
        "uuid": "2efe243d_0e48ee20",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 46,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-03-04T11:18:57Z",
      "side": 1,
      "message": "Now that I think more, is it possible to setup a match to wait for a particular interface instead of getting invoked on all interfaces and then checking inside if that is what we needed .. It just consumes processing.",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39110023_d189855e",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 46,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-05T01:29:14Z",
      "side": 1,
      "message": "Now, we do not know what that particular interface is?",
      "parentUuid": "2efe243d_0e48ee20",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6559a7cf_1056c791",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 46,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-03-05T06:45:51Z",
      "side": 1,
      "message": "xyz.openbmc_project.Configuration.IBMCompatibleSystem is the interface",
      "parentUuid": "39110023_d189855e",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c943dfc6_6c3c43ef",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 46,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-05T09:49:34Z",
      "side": 1,
      "message": "No, we can only use `sender`.",
      "parentUuid": "6559a7cf_1056c791",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1be5e10a_c9b2e0b7",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-03-04T11:18:57Z",
      "side": 1,
      "message": "filePathExists()  ??",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afc9313d_79bdbbaf",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-05T01:29:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1be5e10a_c9b2e0b7",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d6dc578_201387f7",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 79,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-03-04T11:18:57Z",
      "side": 1,
      "message": "is this \"auto const\u0026\" or \"const auto\u0026\" ?",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f6c70b7_b7a67abb",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 79,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-05T01:29:14Z",
      "side": 1,
      "message": "Yeah, \"const auto\u0026 \" is correct.",
      "parentUuid": "5d6dc578_201387f7",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851c372f_9c39450c",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 161,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-03-04T11:18:57Z",
      "side": 1,
      "message": "Should we do this inside try-catch ? The getSubtreePath might throw some exceptions ?",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "832657b1_e3d72a3e",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 161,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-05T01:29:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "851c372f_9c39450c",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d467d52_a2f38c65",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 172,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-03-04T11:18:57Z",
      "side": 1,
      "message": "confCompatValues ?.. since it\u0027s a vector of strings ?",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27fba61e_5606fbe0",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 172,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-05T01:29:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d467d52_a2f38c65",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a6f747a_7ddafb46",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 185,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-03-04T11:18:57Z",
      "side": 1,
      "message": "should we add a confFIle.clear() here also just in case ...",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09aa3a7_8ebebfc2",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 185,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-05T01:29:14Z",
      "side": 1,
      "message": "No, I do not think so.\nBecause we have added \"confFile.clear()\" on L:159.\n“confFile” must be empty if it jump into cath.",
      "parentUuid": "8a6f747a_7ddafb46",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d9ea4cb_fe99facb",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 185,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-03-05T06:45:51Z",
      "side": 1,
      "message": "Agreed. But I was just making sure clearing the confirmation in this case will handle any un handled paths that get into this leg.. more of good practise ..",
      "parentUuid": "d09aa3a7_8ebebfc2",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d169ce09_3c2e2065",
        "filename": "json-config.hpp",
        "patchSetId": 14
      },
      "lineNbr": 185,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-05T09:49:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5d9ea4cb_fe99facb",
      "revId": "bcc08e1039f564b19f10c9a7d2b6ba1b5243ff99",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}