{
  "comments": [
    {
      "key": {
        "uuid": "8beb222e_671cf4f6",
        "filename": "group.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-12-03T10:58:06Z",
      "side": 1,
      "message": "don\u0027t need this change and we can not change the API signatures mid way",
      "range": {
        "startLine": 49,
        "startChar": 22,
        "endLine": 49,
        "endChar": 27
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da32a100_af69b355",
        "filename": "group.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-12-03T12:51:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8beb222e_671cf4f6",
      "range": {
        "startLine": 49,
        "startChar": 22,
        "endLine": 49,
        "endChar": 27
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc09992d_7e6ffabf",
        "filename": "lampTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-12-03T14:12:16Z",
      "side": 1,
      "message": "the other big thing is to set the Group::asserted(false) as part of time expiration.. We need to make sure it does not get into loop.. So we can check if the laamp test is in process and then if we get called into handleLampTest method . then it means that the request is from external user.. else, it is from this lamp test itself. In that case, we can just return.\n\nThat is why, we need the Group reference passed to the LampTest object.. so the callback handler needs to be updated to take the reference to Group object and then it can refer to that",
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d9d5911_77f777fc",
        "filename": "lampTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-12-03T10:58:06Z",
      "side": 1,
      "message": "order ends to be swapped",
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9f8a34f_913ff810",
        "filename": "lampTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-12-03T12:51:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2d9d5911_77f777fc",
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4c01e1_4da70570",
        "filename": "lampTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-12-03T10:58:06Z",
      "side": 1,
      "message": "is this about driving physical LEDs ?.. in that case : drivephysicalLEDs\n\nand sorry, why are we making the \"!\" check here ?",
      "range": {
        "startLine": 44,
        "startChar": 9,
        "endLine": 44,
        "endChar": 29
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "626563e6_4e7883ec",
        "filename": "lampTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-12-03T12:51:38Z",
      "side": 1,
      "message": "\u003e why are we making the \"!\" check here ?\nwe should stop the lamp test when we call the drivephysicalLEDs method in error.",
      "parentUuid": "ad4c01e1_4da70570",
      "range": {
        "startLine": 44,
        "startChar": 9,
        "endLine": 44,
        "endChar": 29
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "877ed613_dec707f4",
        "filename": "lampTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-12-03T14:12:16Z",
      "side": 1,
      "message": "Not really. We could still have some of the LEDs lit up and some may not.. So the LampTest is really about finding those faults. LampTest as a functionality as such, it is still running..  so no need to handle this case",
      "parentUuid": "626563e6_4e7883ec",
      "range": {
        "startLine": 44,
        "startChar": 9,
        "endLine": 44,
        "endChar": 29
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "369457f0_97e0619b",
        "filename": "manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-12-03T10:58:06Z",
      "side": 1,
      "message": "hmm.. we don\u0027t really need this. All we need is ledsAssert and ledsDeAssert.. Basically std::queue\u003cgroup, group\u003e, where group \u003d ledsAssert and group\u003dledsDeAssert. Keep pushing onto it if lamp test and when done.. pop one by one.. so you always get the first in first out.",
      "range": {
        "startLine": 110,
        "startChar": 19,
        "endLine": 110,
        "endChar": 43
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89d70447_1eb70444",
        "filename": "manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-12-03T12:51:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "369457f0_97e0619b",
      "range": {
        "startLine": 110,
        "startChar": 19,
        "endLine": 110,
        "endChar": 43
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "898955e9_ee836b36",
        "filename": "manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-12-03T10:58:06Z",
      "side": 1,
      "message": "we are not restoring the leds assert state.We are restoring physical LED states.\n\nso restorePhysicalLedStates()",
      "range": {
        "startLine": 135,
        "startChar": 8,
        "endLine": 135,
        "endChar": 29
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49108524_3bb14e2f",
        "filename": "manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-12-03T12:51:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "898955e9_ee836b36",
      "range": {
        "startLine": 135,
        "startChar": 8,
        "endLine": 135,
        "endChar": 29
      },
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04c3ef8e_503c8f5b",
        "filename": "manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-12-03T10:58:06Z",
      "side": 1,
      "message": "please add doxygen comment. But I believe this is the std::queue I mentioned.",
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f5da213_ac75a982",
        "filename": "manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-12-03T12:51:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "04c3ef8e_503c8f5b",
      "revId": "1cc4bcf388f7eeacb85ff8f77f6c6727bbfb003e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}