{
  "comments": [
    {
      "key": {
        "uuid": "60b73aea_3e219b54",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 17,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-15T11:15:20Z",
      "side": 1,
      "message": "hm.. I am not following why the manager is called .. lamptest.cpp is the lamp test implementer and has that knowledge",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5979f0ff_87cdf610",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 17,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-19T01:41:33Z",
      "side": 1,
      "message": "Because we used it in manager.cpp\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-led-manager/+/38521/17/manager.cpp#110\n\nYes, we can define it using `static` in the lamptest, but I dont think this is a good way, we need to think more.",
      "parentUuid": "60b73aea_3e219b54",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bfe2bd2_be950cec",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 17,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-19T05:10:32Z",
      "side": 1,
      "message": "Yes. we need to think .. but I am not convinced lamp-test class can not maintain its own status and wants manager to handle it and goes round-about",
      "parentUuid": "5979f0ff_87cdf610",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50dd016c_a218ccb4",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-18T08:13:51Z",
      "side": 1,
      "message": "const auto\u0026 path: ?",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df23c5ad_c2dcf8ac",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-19T01:41:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50dd016c_a218ccb4",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92161a6c_bdda7e93",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 27,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-15T11:15:20Z",
      "side": 1,
      "message": "even this one..",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 38
      },
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c19a10e4_32b8f883",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 27,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-19T01:41:33Z",
      "side": 1,
      "message": "as above",
      "parentUuid": "92161a6c_bdda7e93",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 38
      },
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "973dc713_7a8a6f63",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-15T11:15:20Z",
      "side": 1,
      "message": "lamp test status must be set to false after this point",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8da233a4_f4237b0d",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-19T01:41:33Z",
      "side": 1,
      "message": "No, from the lamp test logic, the order should be: \n1. set isLampTestRunning \u003d false\n2. restorePhysicalLedStates\nBecause in manage.cpp, we need to call the driveLEDs method to restore LEDs, Note: it will be check isLampTestRunning first",
      "parentUuid": "973dc713_7a8a6f63",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "059f0938_7322d725",
        "filename": "lamptest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 35,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-15T11:15:20Z",
      "side": 1,
      "message": "why the manager needs to maintain .. seems like a round about..",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7992f42_5d66c53e",
        "filename": "manager.cpp",
        "patchSetId": 17
      },
      "lineNbr": 115,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-18T08:13:51Z",
      "side": 1,
      "message": "While I am still trying to understand the std::map below, I don\u0027t see we need queue and also a map given how we are using both at the end.",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "473032e3_13166acf",
        "filename": "manager.cpp",
        "patchSetId": 17
      },
      "lineNbr": 115,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-19T01:41:33Z",
      "side": 1,
      "message": "Note:\nstd::map lastLEDsState: Used to save the last LEDs state for all LEDs when use-lamp-test enabled and restored the lamp state after the lamp test is stopped.\nstd::queue assertedGroups: Used to save all LEDs state for all LEDs when use-lamp-test enabled",
      "parentUuid": "f7992f42_5d66c53e",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c69c7a_c6d04f71",
        "filename": "manager.cpp",
        "patchSetId": 17
      },
      "lineNbr": 115,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-19T05:10:32Z",
      "side": 1,
      "message": "Right.. I get how it is now. what I am wondering is : How different is this from maintaining all in std::map / std::unordered_map since we are anyway updating std::map with the contents in std::queue",
      "parentUuid": "473032e3_13166acf",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43a0b903_88a4a108",
        "filename": "manager.cpp",
        "patchSetId": 17
      },
      "lineNbr": 117,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-15T11:15:20Z",
      "side": 1,
      "message": "hmm.. I am still confused by this.. need to think more...",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f05acca0_b209a68a",
        "filename": "manager.cpp",
        "patchSetId": 17
      },
      "lineNbr": 117,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-19T01:41:33Z",
      "side": 1,
      "message": "when use-lamp-test enabled, we need to save the last LEDs state for all LEDs to restore the lamp state after the lamp test is stop.",
      "parentUuid": "43a0b903_88a4a108",
      "revId": "b87f44b4b4d316760d8e26d5a913a5259c3f181c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}